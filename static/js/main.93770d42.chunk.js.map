{"version":3,"sources":["page/PrivateListPage.tsx","page/PublicListPage.tsx","page/RollPage.tsx","page/CustomWordPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PrivateListPage","className","to","PublicListPage","RollPage","console","log","type","OperationArea","DisplayArea","TextArea","Input","MARK_COLOR","CustomWordPage","useState","highWords","setHighWords","textAreaVal","setTextAreaVal","finalData","setFinalData","props","name","showUploadList","beforeUpload","file","cb","Papa","parse","complete","res","result","data","record","push","gerMarkColorRecord","error","reason","csvToJson","createHighWordData","useEffect","storageWords","localStorage","getItem","icon","UploadOutlined","rows","onChange","event","target","value","onClick","slice","WordByHandArr","split","word","trim","finalWords","join","setItem","disabled","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93770d42.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nexport default function PrivateListPage() {\n  return (\n    <div className=\"m-8 \">\n      <ul>\n        <li>\n          <Link to=\"/priviate/createWord\">单词生成页面</Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\n\nexport default function PublicListPage() {\n  return (\n    <div className=\"m-8 \">\n      <ul>\n        <li>\n          <Link to=\"/public/roll\">A站抽奖工具</Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import { Button } from \"antd\";\n\nexport default function RollPage() {\n  console.log(12);\n  return (\n    <div className=\"\">\n      <div className=\"text-center\">\n        <h1 className=\"pt-10\">A站抽奖工具</h1>\n        <Button type=\"primary\">Primary Button</Button>\n      </div>\n      <div className=\"flex\">\n        <OperationArea />\n        <DisplayArea />\n      </div>\n    </div>\n  );\n}\n\nfunction OperationArea() {\n  return <div className=\"w-2/4\">OperationArea</div>;\n}\n\nfunction DisplayArea() {\n  return <div className=\"w-2/4\">DisplayArea</div>;\n}\n","import { useEffect, useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { Upload, Input, Button } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nconst { TextArea } = Input;\nconst MARK_COLOR = \"#B4FFEB\";\n\ninterface FileParsedData {\n  data: Array<Array<string>>;\n  errors: any[];\n  meta: Object;\n}\n\nexport default function CustomWordPage() {\n  const [highWords, setHighWords] = useState<string[]>([]);\n  const [textAreaVal, setTextAreaVal] = useState<any>();\n  const [finalData, setFinalData] = useState<string>();\n\n  const props = {\n    name: \"file\",\n    showUploadList: false,\n    beforeUpload: (file: File) => {\n      csvToJson(file, createHighWordData);\n      return false;\n    },\n  };\n\n  useEffect(() => {\n    //* 如果 storage有数据就从中获取\n    const storageWords: any = localStorage.getItem(\"words\");\n    setTextAreaVal(storageWords);\n  }, []);\n\n  const createHighWordData = (data: string[]) => {\n    setHighWords(data);\n  };\n\n  const updateTextAreaValue = (event: any) => {\n    setTextAreaVal(event.target.value);\n  };\n\n  const generateFinalWords = () => {\n    const result = highWords.slice();\n\n    const WordByHandArr = textAreaVal.split(\"\\n\");\n\n    for (const word of WordByHandArr) {\n      result.push(word.trim());\n    }\n\n    const finalWords = result.join(\" \");\n\n    setFinalData(finalWords);\n    // * set storage\n    localStorage.setItem(\"words\", finalWords);\n  };\n\n  return (\n    <div>\n      <div className=\"flex pt-20\">\n        <div className=\"flex flex-1 justify-center\">\n          <Upload {...props}>\n            <Button icon={<UploadOutlined />}>上传csv</Button>\n          </Upload>\n        </div>\n        <div className=\"flex flex-1\">\n          <div className=\"w-4/5\">\n            <TextArea\n              rows={8}\n              onChange={updateTextAreaValue}\n              value={textAreaVal}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"text-center pt-20\">\n        <Button onClick={generateFinalWords} type=\"primary\">\n          生成\n        </Button>\n        <div className=\"pt-20 w-2/4 m-auto\">\n          <TextArea rows={8} value={finalData} disabled />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction csvToJson(file: File, cb: (data: string[]) => void) {\n  Papa.parse(file, {\n    complete: (res: FileParsedData) => {\n      cb(gerMarkColorRecord(res));\n    },\n    error: (reason) => {\n      console.error(reason);\n    },\n  });\n}\n\nfunction gerMarkColorRecord(res: FileParsedData): string[] {\n  const result = [];\n\n  for (const record of res.data) {\n    if (record[3] === MARK_COLOR) {\n      result.push(record[6]);\n    }\n  }\n\n  return result;\n}\n","import { Link, HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport PrivateListPage from \"./page/PrivateListPage\";\nimport PublicListPage from \"./page/PublicListPage\";\nimport RollPage from \"./page/RollPage\";\nimport CustomWordPage from \"./page/CustomWordPage\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"h-screen\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <div>\n              <Link to=\"public\">public</Link>\n            </div>\n            <div>\n              <Link to=\"private\">private</Link>\n            </div>\n          </Route>\n          <Route exact path=\"/public\">\n            <PublicListPage />\n          </Route>\n          <Route exact path=\"/private\">\n            <PrivateListPage />\n          </Route>\n          <Route exact path=\"/public/roll\">\n            <RollPage />\n          </Route>\n          <Route exact path=\"/priviate/createWord\">\n            <CustomWordPage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}